- if policy(content_plan).create?
  = link_to "edit", [:edit, content_plan], class: 'btn pull-right'
= link_to "history", [:versions, content_plan], class: 'btn pull-right history-btn'

= breadcrumb ["Content Plans", content_plans_path], content_plan.name

.row
  .span12
    h2
      = content_plan.name
    table.table
      tr
        th Size
        th User Needs
        th Tags
        th Status
        th Due
      tr
        td
          = content_plan.size
        td
          = user_needs_links content_plan.need_ids
        td
          = content_plan_tag_filters content_plan.tag_list
        td
          = content_plan.status
        td
          = content_plan.due_date
  .span6
    h4 Organisations
    ul
      - content_plan.organisations.each do |organisation|
        li = organisation.abbreviation_or_name
    
    h4 Details
    = govspeak content_plan.details

    h4
      | Content
      = link_to "Add content", new_content_path(content_plan_id: content_plan.id), class: "btn btn-mini contents-btn"
    ul
      - content_plan.contents.each do |content|
        li
          = link_to content.title, content
          |
          = "(#{content.size})"
          |
          = "[#{content.status}]"
          |
          = link_to "[#{content.platform}]", content.url, rel: "external", target: "_blank"

    h4 Notes
    = govspeak content_plan.notes

  .span6
    h4
      | Tasks
      = link_to "Add task", new_content_plan_task_path(content_plan), class: "btn btn-mini tasks-btn"

    ul.tasks
      - content_plan.tasks.each do |task|
        li
          .delete
            = form_for [content_plan, task], method: :delete do |f|
              = button_tag type: 'submit', class: 'btn btn-mini' do
                <i class='icon-trash'></i>

          = form_for [content_plan, task] do |f|
            = f.check_box :done, class: 'js-task-checkbox'
            = f.submit
          span[class= "#{task.done? ? 'done' : nil}"]
            = task.title

    h4 Comments
    = render "comments/form"

    ul.comments
      - content_plan.comments.each do |comment|
        = render comment
